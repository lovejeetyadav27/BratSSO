<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:security="http://www.springframework.org/schema/security" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
     http://www.springframework.org/schema/beans/spring-beans.xsd
     http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx.xsd
     http://www.springframework.org/schema/security
     http://www.springframework.org/schema/security/spring-security.xsd
     http://www.springframework.org/schema/task 
    http://www.springframework.org/schema/task/spring-task.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/websocket
    http://www.springframework.org/schema/websocket/spring-websocket-4.0.xsd">



	<!-- Initializing the properties file and its location -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>/WEB-INF/properties/application.properties</value>
		</property>
	</bean>

	<!-- packages to scan in spring security -->
	<context:component-scan base-package="com.brat.sso.*" />

	<!-- Specifying that configuration will be annotation based -->
	<context:annotation-config />

	<!-- <security:http pattern="/rest/**" create-session="stateless" security="none"> -->
	<!-- </security:http> -->

	<!-- <sec:http auto-config="true"> -->
	<!-- <sec:intercept-url pattern="/**" access="ROLE_USER" /> -->
	<!-- </sec:http> -->

	<!-- <sec:authentication-manager id="authenticationManager"> -->
	<!-- <sec:authentication-provider> -->
	<!-- <sec:user-service> -->
	<!-- <sec:user name="admin" password="password" authorities="ROLE_USER, 
		ROLE_ADMIN" /> -->
	<!-- <sec:user name="user" password="password" authorities="ROLE_USER" /> -->
	<!-- </sec:user-service> -->
	<!-- </sec:authentication-provider> -->
	<!-- </sec:authentication-manager> -->
	
	<security:http pattern="/lol" entry-point-ref="loginUrlAuthenticationEntryPoint">
	    <security:custom-filter after="BASIC_AUTH_FILTER" ref="myFilter" />
	</security:http>
	 
	<bean id="myFilter" class="com.brat.sso.filters.LovejeetFilter"/>


<!-- 	Validating the login for each http page permitting all for resources -->
<!-- 	folder and login page -->
	<security:http auto-config="false" use-expressions="true"
		entry-point-ref="loginUrlAuthenticationEntryPoint">

		<security:intercept-url pattern="/rest/**"
			access="isAuthenticated()" requires-channel="${app.url.channel}" />
		<security:intercept-url pattern="/ext/**"
			access="permitAll" requires-channel="${app.url.channel}" />
		<security:intercept-url pattern="/login"
			access="permitAll" requires-channel="${app.url.channel}" />
		<security:intercept-url pattern="/**"
			access="isAuthenticated()" requires-channel="${app.url.channel}" />

<!-- 		Specifying the URL for logout functionality -->
		<security:logout logout-url="/logout"
			invalidate-session="true" delete-cookies="intranet" />

<!-- 		This configures the access denied page for the unauthorized users. -->
<!-- 		Further implementation is also required in the controller for -->
<!-- 		redirecting -->
<!-- 		to this page. -->
		<security:access-denied-handler
			error-page="/accessdenied" />

		<security:custom-filter before="FORM_LOGIN_FILTER"
			ref="customUsernamePasswordAuthenticationFilter" />

<!-- 		enable csrf protection -->
		<security:csrf disabled="false" />
		<security:logout logout-url="/logout"
			logout-success-url="/login" delete-cookies="intranet"
			invalidate-session="true" />
	</security:http>

	<bean id="loginUrlAuthenticationEntryPoint"
		class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
		<constructor-arg value="/login"></constructor-arg>
	</bean>


	<bean id="customUsernamePasswordAuthenticationFilter"
		class="com.brat.sso.filters.CustomUsernamePasswordAuthenticationFilter">
		<property name="authenticationManager" ref="authenticationManager" />
		<property name="authenticationSuccessHandler" ref="authenticationSuccessFilter" />
		<property name="authenticationFailureHandler" ref="authenticationFailureFilter" />
		<property name="usernameParameter" value="username" />
		<property name="passwordParameter" value="password" />
	</bean>

	<security:authentication-manager
		erase-credentials="true" id="authenticationManager">
		<security:authentication-provider
			ref="customAuthenticationProvider" />
	</security:authentication-manager>


</beans>